input RegisterInput {
  name: String!
  email: String!
  password: String!
  phone: String!
}

input LoginInput {
  email: String!
  password: String!
}

input GeoPointInput {
  latitudeDegrees: Float! @constraint(min: -90, max: 90)
  longitudeDegrees: Float! @constraint(min: -180, max: 180)
}

type GeoPoint {
  latitudeDegrees: Float! @constraint(min: -90, max: 90)
  longitudeDegrees: Float! @constraint(min: -180, max: 180)
}

input AddressInput {
  title: String!
  address: String!
  location: GeoPointInput!
  isDefault: Boolean
}

type Address {
  id: ID!
  title: String!
  street: String!
  city: String!
  state: String!
  zipCode: String!
  country: String!
  location: GeoPoint!
  isDefault: Boolean!
}

type OpeningHours {
  day: DayOfWeek!
  open: String!
  close: String!
}

input PaginationInput {
  page: Int! @constraint(min: 1)
  limit: Int! @constraint(min: 1, max: 100)
}

type Pagination {
  page: Int!
  limit: Int!
  total: Int!
}

type PaymentIntent {
  clientSecret: String!
}

type PaymentMethod {
  id: ID!
  type: String!
  last4: String
  brand: String
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

# Shared Types
type User {
  id: ID!
  name: String!
  email: String!
  phone: String!
  avatar: String
  addresses: [Address!]!
  favorites: [MenuItem!]!
}

type Driver {
  id: ID!
  name: String!
  phone: String!
  avatar: String
}

type Order {
  id: ID!
  user: User!
  vendor: Vendor!
  items: [OrderItem!]!
  subtotal: Float!
  deliveryFee: Float!
  tax: Float!
  total: Float!
  deliveryAddress: Address!
  paymentMethod: String!
  paymentStatus: PaymentStatus!
  status: OrderStatus!
  driver: Driver
  estimatedDelivery: String
  deliveredAt: String
  createdAt: String!
}

type OrderItem {
  item: MenuItem!
  quantity: Int!
  price: Float!
  options: [OrderItemOption!]
  specialInstructions: String
}

type OrderItemOption {
  name: String!
  choice: String!
}

enum OrderStatus {
  PREPARING
  ON_THE_WAY
  DELIVERED
  CANCELLED
}

type DeliveryUpdate {
  location: GeoPoint!
  status: DeliveryStatus!
  estimatedArrival: String
}

enum DeliveryStatus {
  PICKED_UP
  IN_TRANSIT
  NEARBY
  DELIVERED
}
